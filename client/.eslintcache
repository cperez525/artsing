[{"C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\pages\\signInPage.js":"1","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\index.js":"2","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\pages\\registerPage.js":"3","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\pages\\profilePage.js":"4","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\services\\Profile.js":"5","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\pages\\profileEditPage.js":"6","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\components\\navbar\\Navbar.js":"7","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\pages\\searchPage.js":"8","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\components\\message.js":"9","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\pages\\homePage.js":"10","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\components\\search\\searchForm.js":"11","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\components\\navbar\\signInOption.js":"12","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\components\\navbar\\signOutOption.js":"13","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\App.js":"14","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\Context\\AuthenticationCtxt.js":"15","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\services\\Authentication.js":"16","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\services\\Cloudinary.js":"17"},{"size":2663,"mtime":1608672829069,"results":"18","hashOfConfig":"19"},{"size":333,"mtime":1608165519682,"results":"20","hashOfConfig":"19"},{"size":5258,"mtime":1608629267654,"results":"21","hashOfConfig":"19"},{"size":9634,"mtime":1608647547029,"results":"22","hashOfConfig":"19"},{"size":2278,"mtime":1608610920246,"results":"23","hashOfConfig":"19"},{"size":15867,"mtime":1608639720954,"results":"24","hashOfConfig":"19"},{"size":1768,"mtime":1608634281588,"results":"25","hashOfConfig":"19"},{"size":408,"mtime":1608577682607,"results":"26","hashOfConfig":"19"},{"size":336,"mtime":1608628125417,"results":"27","hashOfConfig":"19"},{"size":1732,"mtime":1608672693874,"results":"28","hashOfConfig":"19"},{"size":7080,"mtime":1608649730720,"results":"29","hashOfConfig":"19"},{"size":244,"mtime":1608632352352,"results":"30","hashOfConfig":"19"},{"size":703,"mtime":1608632366951,"results":"31","hashOfConfig":"19"},{"size":985,"mtime":1608672314960,"results":"32","hashOfConfig":"19"},{"size":895,"mtime":1608636789997,"results":"33","hashOfConfig":"19"},{"size":1509,"mtime":1608253577871,"results":"34","hashOfConfig":"19"},{"size":509,"mtime":1608594000291,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1wwpoez",{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"41"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"41"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"41"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"67"},"C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\pages\\signInPage.js",["80"],"C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\index.js",["81"],"import React, {useContext} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AuthProvider from './Context/AuthenticationCtxt'\n\nReactDOM.render(\n  <AuthProvider>\n    <App />\n  </AuthProvider>,    \n  document.getElementById('root')\n);\n\n",["82","83"],"C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\pages\\registerPage.js",[],["84","85"],"C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\pages\\profilePage.js",["86","87","88","89","90","91"],"C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\services\\Profile.js",["92"],"export default {\r\n    getUser: (id) => {\r\n        return fetch('/user/profile=' + id).then(res => {\r\n                return res.json().then(data => data)\r\n            })\r\n    },\r\n    \r\n    updateUser: (body) => {\r\n        return fetch('/user/profile', {\r\n            method: \"PUT\",\r\n            body: JSON.stringify(body),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(res => res.json())\r\n            .then(data => data)\r\n    },\r\n\r\n    getRoles: (id) => {\r\n        return fetch('/user/roles/profile=' + id).then(res => {\r\n                return res.json().then(data => data)\r\n            })\r\n    },\r\n\r\n    addRole: (body) =>{\r\n        return fetch('/user/roles', {\r\n            method: \"POST\",\r\n            body: JSON.stringify(body),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(res => res.json())\r\n            .then(data => data)\r\n    },\r\n\r\n\r\n    getAudio: (id) => {\r\n        return fetch('/user/audios/profile=' + id).then(res => {\r\n                return res.json().then(data => data)\r\n            })\r\n    },\r\n\r\n    addAudio: (body) =>{\r\n        return fetch('/user/audios', {\r\n            method: \"POST\",\r\n            body: JSON.stringify(body),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(res => res.json())\r\n            .then(data => data)\r\n    },\r\n\r\n    getVideo: (id) => {\r\n        return fetch('/user/videos/profile=' + id).then(res => {\r\n                return res.json().then(data => data)\r\n            })\r\n    },\r\n\r\n    addVideo: (body) =>{\r\n        return fetch('/user/videos', {\r\n            method: \"POST\",\r\n            body: JSON.stringify(body),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(res => res.json())\r\n            .then(data => data)\r\n    },\r\n\r\n    simpleSearch: (search) => {\r\n        return fetch('/user/simplesearch=' + search).then(res => {\r\n\r\n            return res.json().then(data => data)\r\n        })\r\n    },\r\n    \r\n    advancedSearch: (search) => {\r\n        return fetch('/user/advancedsearch=' + search).then(res => {\r\n            return res.json().then(data => data)\r\n        })\r\n    }\r\n}","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\pages\\profileEditPage.js",["93","94","95","96","97"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"../Context/AuthenticationCtxt\";\r\nimport { Container, Nav, Form, Button } from \"react-bootstrap\";\r\nimport ProfileService from \"../services/Profile\";\r\nimport Message from '../components/message';\r\nimport CloudinaryService from \"../services/Cloudinary\"\r\n\r\n\r\nfunction Edit(props) {\r\n\r\n    const authContext = useContext(AuthContext)\r\n    const [user] = useState(authContext.user);\r\n    const [contentInView, setContentInView] = useState(\"Info\")\r\n    const [artistViewed, setArtistViewed] = useState({})\r\n    const [rolesViewed, setRolesViewed] = useState([])\r\n    const [videoViewed, setVideoViewed] = useState([])\r\n    const [audioViewed, setAudioViewed] = useState([])\r\n    const [roleToAdd, setRoleToAdd] = useState({})\r\n    const [videoToAdd, setVideoToAdd] = useState({})\r\n    const [audioToAdd, setAudioToAdd] = useState({})\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const [cloudinaryData, setCloudinaryData] = useState(\"\")\r\n\r\n\r\n    let currentArtist = window.location.href.split(\"=\")[1];\r\n\r\n    useEffect(() => {\r\n        ProfileService.getUser(currentArtist).then(res => {\r\n            setArtistViewed(res)\r\n        }).then(() => {\r\n            ProfileService.getRoles(currentArtist).then(res => {\r\n                setRolesViewed(res)\r\n            }).then(() => {\r\n                ProfileService.getAudio(currentArtist).then(res => {\r\n                    setAudioViewed(res)\r\n                }).then(() => {\r\n                    ProfileService.getVideo(currentArtist).then(res => {\r\n                        setVideoViewed(res)\r\n                    })\r\n                })\r\n            })\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (audioToAdd.audio_link) {\r\n            ProfileService.addAudio(audioToAdd).then((res) => {\r\n                setMessage({messageBody: \"Upload Successful!\", messageError: false})\r\n            }).then(() => {\r\n                setAudioToAdd({})\r\n            })\r\n        }\r\n    }, [audioToAdd])\r\n\r\n    useEffect(() => {\r\n\r\n        setFormsVisible()\r\n    }, [contentInView])\r\n\r\n    const handleNavClick = (e) => {\r\n        e.preventDefault()\r\n\r\n        const { id } = e.target\r\n\r\n        setContentInView(id)\r\n        setMessage(null)\r\n    }\r\n\r\n    const setFormsVisible = () => {\r\n\r\n        const forms = document.getElementsByTagName(\"FORM\")\r\n\r\n        for (var i = 0; i < forms.length; i++) {\r\n\r\n            if (forms[i].id === contentInView) {\r\n                forms[i].style.display = null\r\n            } else {\r\n                forms[i].style.display = \"none\"\r\n            }\r\n        }\r\n    }\r\n\r\n    const onArtistChange = (e) => {\r\n\r\n        const { name, value } = e.target\r\n        setArtistViewed({ ...user, [name]: value })\r\n        setMessage(null)\r\n    }\r\n\r\n    const onArtistSubmit = (e) => {\r\n\r\n        e.preventDefault()\r\n\r\n        ProfileService.updateUser(artistViewed).then(res => {\r\n            if (res.message.messageError === false) {\r\n                setMessage({ messageBody: \"Upload successful!\", messageError: false })\r\n            } else {\r\n                setMessage({messageBody: res.message.messageBody, messageError: true})\r\n            }\r\n        })\r\n    }\r\n\r\n    const onRoleChange = (e) => {\r\n\r\n        const { name, value } = e.target\r\n        setRoleToAdd({ ...roleToAdd, [name]: value })\r\n        setMessage(null)\r\n    }\r\n\r\n    const onRoleSubmit = (e) => {\r\n\r\n        e.preventDefault()\r\n\r\n        ProfileService.addRole(roleToAdd).then(res => {\r\n            if (res.message.messageError === false) {\r\n                setMessage({ messageBody: \"Upload successful!\", messageError: false })\r\n            } else {\r\n                setMessage({messageBody: \"Something went wrong. Please try again later\", messageError: true})\r\n            }\r\n        })\r\n    }\r\n\r\n    const onMediaChange = (e) => {\r\n\r\n\r\n\r\n        const { files } = e.target\r\n\r\n        const data = new FormData()\r\n\r\n        data.append('file', files[0])\r\n        data.append('upload_preset', \"tdufqkda\")\r\n\r\n        setCloudinaryData(data)\r\n    }\r\n\r\n    const onPictureSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        CloudinaryService.uploadPicture(cloudinaryData).then(res => {\r\n            ProfileService.updateUser({ \"headshot\": res.secure_url }).then(talkBack => {\r\n                if (talkBack.message.messageError === false) {\r\n                    setMessage({ messageBody: \"Upload successful!\", messageError: false })\r\n                } else {\r\n                    setMessage({messageBody: talkBack.message.messageBody, messageError: true})\r\n                }\r\n            }).then(() => {\r\n                setCloudinaryData(\"\")\r\n            })\r\n        })\r\n    }\r\n\r\n    const onAudioInfoChange = (e) => {\r\n\r\n        const { name, value } = e.target\r\n        setAudioToAdd({ ...audioToAdd, [name]: value })\r\n        setMessage(null)\r\n    }\r\n\r\n    const onAudioSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        CloudinaryService.uploadVideo(cloudinaryData).then(res => {\r\n            setAudioToAdd({ ...audioToAdd, audio_link: res.secure_url })\r\n        })\r\n    }\r\n\r\n    const onVideoChange = (e) => {\r\n        const { name, value } = e.target\r\n        setVideoToAdd({ ...videoToAdd, [name]: value })\r\n        setMessage(null)\r\n    }\r\n\r\n    const onVideoSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        ProfileService.addVideo(videoToAdd).then(res => {\r\n            if (res.message.messageError === false) {\r\n                setMessage({ messageBody: \"Upload successful!\", messageError: false })\r\n            } else {\r\n                setMessage({messageBody: res.message.messageBody, messageError: true})\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <Container>\r\n            {user._id === currentArtist ?\r\n                <Container style={{ width: \"50vw\", borderColor: \"black\" }}>\r\n\r\n                    <Nav className=\"justify-content-center\" variant=\"tabs\" activeKey={contentInView} >\r\n                        <Nav.Item>\r\n                            <Nav.Link eventKey=\"Info\" id=\"Info\" style={{ fontWeight: \"bolder\", fontFamily: \"'Times New Roman'\" }} onClick={handleNavClick}>Info</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link eventKey=\"Bio\" id=\"Bio\" style={{ fontWeight: \"bolder\", fontFamily: \"'Times New Roman'\" }} onClick={handleNavClick}>Bio</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link eventKey=\"Roles\" id=\"Roles\" style={{ fontWeight: \"bolder\", fontFamily: \"'Times New Roman'\" }} onClick={handleNavClick}>Roles</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link eventKey=\"Audio\" id=\"Audio\" style={{ fontWeight: \"bolder\", fontFamily: \"'Times New Roman'\" }} onClick={handleNavClick}>Audio</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link eventKey=\"Video\" id=\"Video\" style={{ fontWeight: \"bolder\", fontFamily: \"'Times New Roman'\" }} onClick={handleNavClick}>Video</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link eventKey=\"Headshot\" id=\"Headshot\" style={{ fontWeight: \"bolder\", fontFamily: \"'Times New Roman'\" }} onClick={handleNavClick}>Headshot</Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                    <Form id=\"Info\" style={{ display: \"none\", marginTop:\"2vh\", boxShadow:\"2px 2px 20px\", padding:\"2vh\" }} onSubmit={onArtistSubmit}>\r\n                        <Form.Label htmlFor=\"first_name\" style={{ fontFamily: \"'Times New Roman'\" }}>First Name: </Form.Label>\r\n                        <input className=\"form-control\" type=\"text\" name=\"first_name\" defaultValue={artistViewed.first_name} style={{ fontFamily: \"'Times New Roman'\" }} placeholder=\"Jane\" onChange={onArtistChange} />\r\n                        <Form.Label htmlFor=\"last_name\" style={{ fontFamily: \"'Times New Roman'\" }}>Last Name: </Form.Label>\r\n                        <input className=\"form-control\" type=\"text\" name=\"last_name\" defaultValue={artistViewed.last_name} style={{ fontFamily: \"'Times New Roman'\" }} placeholder=\"Doe\" onChange={onArtistChange} />\r\n                        <Form.Label htmlFor=\"city\" style={{ fontFamily: \"'Times New Roman'\" }}>City: </Form.Label>\r\n                        <input className=\"form-control\" type=\"text\" name=\"city\" defaultValue={artistViewed.city} style={{ fontFamily: \"'Times New Roman'\" }} placeholder=\"Austin\" onChange={onArtistChange} />\r\n                        <Form.Label htmlFor=\"state\" style={{ fontFamily: \"'Times New Roman'\" }}>State: </Form.Label>\r\n                        <input className=\"form-control\" type=\"text\" name=\"state\" style={{ fontFamily: \"'Times New Roman'\" }} defaultValue={artistViewed.state} placeholder=\"Texas\" onChange={onArtistChange} />\r\n                        <Form.Label htmlFor=\"school\" style={{ fontFamily: \"'Times New Roman'\" }}>School: </Form.Label>\r\n                        <input className=\"form-control\" defaultValue={artistViewed.school} style={{ fontFamily: \"'Times New Roman'\" }} type=\"text\" name=\"school\" placeholder=\"University of Houston\" onChange={onArtistChange} />\r\n                        <Form.Label htmlFor=\"email\" style={{ fontFamily: \"'Times New Roman'\" }}>Email Address: </Form.Label>\r\n                        <input className=\"form-control\" defaultValue={artistViewed.email} style={{ fontFamily: \"'Times New Roman'\" }} type=\"text\" name=\"email\" placeholder=\"janedoe@isfake.net\" onChange={onArtistChange} />\r\n                        <Button style={{ marginTop: \"5px\", fontFamily: \"'Times New Roman'\" }} variant=\"outline-dark\" type=\"submit\">Submit</Button>\r\n                        {message ? <Message message={message} /> : null}\r\n                    </Form>\r\n\r\n                    <Form id=\"Bio\" style={{ display: \"none\", marginTop:\"2vh\", boxShadow:\"2px 2px 20px\", padding:\"2vh\" }} onSubmit={onArtistSubmit}>\r\n                        <Form.Label style={{ fontFamily: \"'Times New Roman'\" }}>Add/Edit Bio: </Form.Label>\r\n                        <textarea className=\"form-control\" name=\"bio\" style={{ fontFamily: \"'Times New Roman'\" }} defaultValue={artistViewed.bio} placeholder=\"Enter Bio Here\" onChange={onArtistChange} />\r\n                        <Button style={{ marginTop: \"5px\", fontFamily: \"'Times New Roman'\" }} variant=\"outline-dark\" type=\"submit\">Submit</Button>\r\n                        {message ? <Message message={message} /> : null}\r\n                    </Form>\r\n\r\n                    <Form id=\"Roles\" style={{ display: \"none\", marginTop:\"2vh\", boxShadow:\"2px 2px 20px\", padding:\"2vh\" }} onSubmit={onRoleSubmit}>\r\n                        <Form.Label style={{ fontFamily: \"'Times New Roman'\" }}>Character: </Form.Label>\r\n                        <input className=\"form-control\" name=\"character_name\" style={{ fontFamily: \"'Times New Roman'\" }} placeholder=\"Sarastro\" onChange={onRoleChange} required />\r\n                        <Form.Label style={{ fontFamily: \"'Times New Roman'\" }}>Opera/Show: </Form.Label>\r\n                        <input className=\"form-control\" name=\"opera_show_name\" style={{ fontFamily: \"'Times New Roman'\" }} placeholder=\"The Magic Flute\" onChange={onRoleChange} required />\r\n                        <Form.Label style={{ fontFamily: \"'Times New Roman'\" }}>Composer: </Form.Label>\r\n                        <input className=\"form-control\" name=\"composer\" style={{ fontFamily: \"'Times New Roman'\" }} placeholder=\"Mozart\" onChange={onRoleChange} required />\r\n                        <Button style={{ marginTop: \"5px\", fontFamily: \"'Times New Roman'\" }} variant=\"outline-dark\" type=\"submit\">Submit</Button>\r\n                        {message ? <Message message={message} /> : null}\r\n                    </Form>\r\n\r\n                    <Form id=\"Audio\" style={{ display: \"none\", marginTop:\"2vh\", boxShadow:\"2px 2px 20px\", padding:\"2vh\" }} onSubmit={onAudioSubmit}>\r\n                        <Form.Label style={{ fontFamily: \"'Times New Roman'\" }}>Song Name: </Form.Label>\r\n                        <input className=\"form-control\" name=\"song_name\" style={{ fontFamily: \"'Times New Roman'\" }} placeholder=\"O Isis und Osiris\" onChange={onAudioInfoChange} required />\r\n                        <Form.Label style={{ fontFamily: \"'Times New Roman'\" }}>Composer: </Form.Label>\r\n                        <input className=\"form-control\" name=\"song_composer\" style={{ fontFamily: \"'Times New Roman'\" }} placeholder=\"Mozart\" onChange={onAudioInfoChange} required />\r\n                        <Form.Label style={{ fontFamily: \"'Times New Roman'\" }}>Language: </Form.Label>\r\n                        <input className=\"form-control\" name=\"language\" style={{ fontFamily: \"'Times New Roman'\" }} placeholder=\"German\" onChange={onAudioInfoChange} required />\r\n                        <Form.Label style={{ fontFamily: \"'Times New Roman'\" }}>Audio File: </Form.Label>\r\n                        <Form.File style={{ fontFamily: \"'Times New Roman'\" }} name=\"audio_link\" onChange={onMediaChange} required />\r\n                        <Button style={{ marginTop: \"5px\", fontFamily: \"'Times New Roman'\" }} variant=\"outline-dark\" type=\"submit\">Submit</Button>\r\n                        {message ? <Message message={message} /> : null}\r\n                    </Form>\r\n\r\n                    <Form id=\"Video\" style={{ display: \"none\", marginTop:\"2vh\", boxShadow:\"2px 2px 20px\", padding:\"2vh\" }} onSubmit={onVideoSubmit}>\r\n                        <Form.Label style={{ fontFamily: \"'Times New Roman'\" }}>Song Name: </Form.Label>\r\n                        <input className=\"form-control\" name=\"song_name\" style={{ fontFamily: \"'Times New Roman'\" }} placeholder=\"O Isis und Osiris\" onChange={onVideoChange} required />\r\n                        <Form.Label style={{ fontFamily: \"'Times New Roman'\" }}>Composer: </Form.Label>\r\n                        <input className=\"form-control\" name=\"song_composer\" style={{ fontFamily: \"'Times New Roman'\" }} placeholder=\"Mozart\" onChange={onVideoChange} required />\r\n                        <Form.Label style={{ fontFamily: \"'Times New Roman'\" }}>Language: </Form.Label>\r\n                        <input className=\"form-control\" name=\"language\" style={{ fontFamily: \"'Times New Roman'\" }} placeholder=\"German\" onChange={onVideoChange} required />\r\n                        <Form.Label style={{ fontFamily: \"'Times New Roman'\" }}>Youtube Embed Link: </Form.Label>\r\n                        <input className=\"form-control\" name=\"video_link\" style={{ fontFamily: \"'Times New Roman'\" }} placeholder=\"https://www.youtube.com/embed/Xox5wU7RXsA\" onChange={onVideoChange} required />\r\n                        <Button style={{ marginTop: \"5px\", fontFamily: \"'Times New Roman'\" }} variant=\"outline-dark\" type=\"submit\">Submit</Button>\r\n                        {message ? <Message message={message} /> : null}\r\n                    </Form>\r\n\r\n                    <Form id=\"Headshot\" style={{ display: \"none\", marginTop:\"2vh\", boxShadow:\"2px 2px 20px\", padding:\"2vh\" }} onSubmit={onPictureSubmit}>\r\n                        <Form.Label style={{ fontFamily: \"'Times New Roman'\" }}>Headshot: </Form.Label>\r\n                        <Form.File style={{ fontFamily: \"'Times New Roman'\" }} name=\"headshot\" onChange={onMediaChange} required />\r\n                        <Button style={{ marginTop: \"5px\", fontFamily: \"'Times New Roman'\" }} variant=\"outline-dark\" type=\"submit\">Submit</Button>\r\n                        {message ? <Message message={message} /> : null}\r\n                    </Form>\r\n\r\n\r\n                </Container>\r\n                :\r\n                <h1>You are not authroized to edit this profile!</h1>\r\n            }\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default Edit","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\components\\navbar\\Navbar.js",["98"],"import React, { useContext, useEffect } from \"react\"\r\nimport { Link } from 'react-router-dom'\r\nimport { AuthContext } from '../../Context/AuthenticationCtxt'\r\nimport { Nav, Navbar } from \"react-bootstrap\"\r\nimport SignIn from './signInOption'\r\nimport SignOut from './signOutOption'\r\nimport './navbar.css'\r\n\r\nfunction NavBar(props) {\r\n\r\n    const { user, isAuthenticated } = useContext(AuthContext)\r\n    \r\n    return (\r\n        <Navbar bg=\"dark\" expand=\"lg\" style={{ width: \"100%\" }}>\r\n            <Link to={isAuthenticated ? \"/profile=\" + user._id : \"/\"}>\r\n                <Navbar.Brand style={{ fontSize: \"xx-large\", color: \"whitesmoke\", fontFamily: \"'Times New Roman'\" }}>singID</Navbar.Brand>\r\n            </Link>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"justify-content-end navbar-dark\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"justify-content-end\" style={{ width: \"100%\", fontFamily:\"'Times New Roman'\" }}>\r\n                    {isAuthenticated ? \r\n                    <Nav.Link className=\"navBtn\" style={{color:\"whitesmoke\", fontFamily:\"'Times New Roman'\" }} href={\"/profileedit=\" + user._id}>Edit Profile</Nav.Link>\r\n                    :\r\n                    null}\r\n                    <Nav.Link className=\"navBtn\" style={{ color: \"whitesmoke\", fontFamily:\"'Times New Roman'\" }} href={isAuthenticated ? \"/profile=\" + user._id : \"/\"}>Home</Nav.Link>\r\n                    <Nav.Link className=\"navBtn\" style={{ color: \"whitesmoke\", fontFamily: \"'Times New Roman\" }} href=\"/search\">Search Artists</Nav.Link>\r\n                    { isAuthenticated ? <SignOut /> : <SignIn />}\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\pages\\searchPage.js",["99","100","101","102","103","104"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Nav, Form, FormControl, Button } from \"react-bootstrap\"\r\nimport SearchForm from \"../components/search/searchForm\"\r\n\r\n\r\nfunction SearchPage(props) {\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <Container style={{marginRight:\"25vw\", marginLeft:\"25vw\"}}>\r\n\r\n            <SearchForm />\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SearchPage","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\components\\message.js",[],"C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\pages\\homePage.js",["105","106"],"C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\components\\search\\searchForm.js",["107"],"C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\components\\navbar\\signInOption.js",[],["108","109"],"C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\components\\navbar\\signOutOption.js",[],"C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\App.js",["110"],"C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\Context\\AuthenticationCtxt.js",["111"],"C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\services\\Authentication.js",["112"],"export default {\r\n    login: (user) => {\r\n        return fetch('/user/signin', {\r\n            method: \"POST\",\r\n            body: JSON.stringify(user),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(res => {\r\n            if (res.status !== 401) {\r\n                return res.json().then(data => data)\r\n            } else {\r\n                return { isAuthenticated: false, message: {messageBody: \"Meeeeeeeeeeeeeeow\", messageError: true},  user: { email: \"\", first_name: \"\", last_name: \"\" } }\r\n            }\r\n        })\r\n    },\r\n    register: (user) => {\r\n        return fetch('/user/register', {\r\n            method: \"POST\",\r\n            body: JSON.stringify(user),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(res => res.json())\r\n            .then(data => data);\r\n    },\r\n    logout: () => {\r\n        return fetch('user/logout')\r\n            .then(res => res.json())\r\n            .then(data => data);\r\n    },\r\n    isAuthenticated: () => {\r\n        return fetch('user/authenticated')\r\n            .then(res => {\r\n                if (res.status !== 401) {\r\n                    return res.json().then(data => data)\r\n                } else {\r\n                    return { isAuthenticated: false, message: { messageBody: \"You do not have permission to access this page\", messageError: true }, user: { email: \"\", first_name: \"\", last_name: \"\" } }\r\n                }\r\n            })\r\n    }\r\n}","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\services\\Cloudinary.js",["113"],"export default {\r\n    uploadPicture: (data) => {\r\n        return fetch('https://api.cloudinary.com/v1_1/esthete/image/upload', {\r\n            method: \"POST\",\r\n            body: data\r\n        }).then(res => res.json())\r\n            .then(data => data);\r\n    }, \r\n    \r\n    uploadVideo: (data) => {\r\n        return fetch('https://api.cloudinary.com/v1_1/esthete/video/upload', {\r\n            method: \"POST\",\r\n            body: data\r\n        }).then(res => res.json())\r\n            .then(data => data);\r\n    }\r\n}",{"ruleId":"114","severity":1,"message":"115","line":34,"column":44,"nodeType":"116","messageId":"117","endLine":34,"endColumn":51},{"ruleId":"114","severity":1,"message":"118","line":1,"column":16,"nodeType":"116","messageId":"117","endLine":1,"endColumn":26},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"119","replacedBy":"123"},{"ruleId":"121","replacedBy":"124"},{"ruleId":"114","severity":1,"message":"125","line":10,"column":12,"nodeType":"116","messageId":"117","endLine":10,"endColumn":19},{"ruleId":"114","severity":1,"message":"126","line":18,"column":12,"nodeType":"116","messageId":"117","endLine":18,"endColumn":27},{"ruleId":"114","severity":1,"message":"127","line":18,"column":29,"nodeType":"116","messageId":"117","endLine":18,"endColumn":47},{"ruleId":"128","severity":1,"message":"129","line":26,"column":8,"nodeType":"130","endLine":26,"endColumn":10,"suggestions":"131"},{"ruleId":"128","severity":1,"message":"132","line":31,"column":8,"nodeType":"130","endLine":31,"endColumn":23,"suggestions":"133"},{"ruleId":"128","severity":1,"message":"134","line":53,"column":8,"nodeType":"130","endLine":53,"endColumn":22,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":1,"column":1,"nodeType":"138","endLine":83,"endColumn":2},{"ruleId":"114","severity":1,"message":"139","line":15,"column":12,"nodeType":"116","messageId":"117","endLine":15,"endColumn":23},{"ruleId":"114","severity":1,"message":"140","line":16,"column":12,"nodeType":"116","messageId":"117","endLine":16,"endColumn":23},{"ruleId":"114","severity":1,"message":"141","line":17,"column":12,"nodeType":"116","messageId":"117","endLine":17,"endColumn":23},{"ruleId":"128","severity":1,"message":"129","line":44,"column":8,"nodeType":"130","endLine":44,"endColumn":10,"suggestions":"142"},{"ruleId":"128","severity":1,"message":"143","line":59,"column":8,"nodeType":"130","endLine":59,"endColumn":23,"suggestions":"144"},{"ruleId":"114","severity":1,"message":"145","line":1,"column":29,"nodeType":"116","messageId":"117","endLine":1,"endColumn":38},{"ruleId":"114","severity":1,"message":"146","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":25},{"ruleId":"114","severity":1,"message":"145","line":1,"column":27,"nodeType":"116","messageId":"117","endLine":1,"endColumn":36},{"ruleId":"114","severity":1,"message":"147","line":2,"column":21,"nodeType":"116","messageId":"117","endLine":2,"endColumn":24},{"ruleId":"114","severity":1,"message":"148","line":2,"column":26,"nodeType":"116","messageId":"117","endLine":2,"endColumn":30},{"ruleId":"114","severity":1,"message":"149","line":2,"column":32,"nodeType":"116","messageId":"117","endLine":2,"endColumn":43},{"ruleId":"114","severity":1,"message":"150","line":2,"column":45,"nodeType":"116","messageId":"117","endLine":2,"endColumn":51},{"ruleId":"114","severity":1,"message":"146","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":25},{"ruleId":"128","severity":1,"message":"151","line":17,"column":7,"nodeType":"130","endLine":17,"endColumn":9,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":112,"column":41,"nodeType":"155","endLine":112,"endColumn":225},{"ruleId":"119","replacedBy":"156"},{"ruleId":"121","replacedBy":"157"},{"ruleId":"114","severity":1,"message":"118","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":27},{"ruleId":"136","severity":1,"message":"158","line":6,"column":1,"nodeType":"138","endLine":31,"endColumn":2},{"ruleId":"136","severity":1,"message":"137","line":1,"column":1,"nodeType":"138","endLine":42,"endColumn":2},{"ruleId":"136","severity":1,"message":"137","line":1,"column":1,"nodeType":"138","endLine":17,"endColumn":2},"no-unused-vars","'message' is assigned a value but never used.","Identifier","unusedVar","'useContext' is defined but never used.","no-native-reassign",["159"],"no-negated-in-lhs",["160"],["159"],["160"],"'canEdit' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","'setIsAuthenticated' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentArtist'. Either include it or remove the dependency array.","ArrayExpression",["161"],"React Hook useEffect has a missing dependency: 'setRowsVisible'. Either include it or remove the dependency array.",["162"],"React Hook useEffect has missing dependencies: 'currentArtist' and 'user'. Either include them or remove the dependency array.",["163"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'rolesViewed' is assigned a value but never used.","'videoViewed' is assigned a value but never used.","'audioViewed' is assigned a value but never used.",["164"],"React Hook useEffect has a missing dependency: 'setFormsVisible'. Either include it or remove the dependency array.",["165"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Nav' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'isAuthenticated' and 'user._id'. Either include them or remove the dependency array.",["166"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["159"],["160"],"Assign arrow function to a variable before exporting as module default","no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"167","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [currentArtist]",{"range":"178","text":"179"},"Update the dependencies array to be: [contentInView, setRowsVisible]",{"range":"180","text":"181"},"Update the dependencies array to be: [artistViewed, currentArtist, user]",{"range":"182","text":"183"},{"range":"184","text":"179"},"Update the dependencies array to be: [contentInView, setFormsVisible]",{"range":"185","text":"186"},"Update the dependencies array to be: [isAuthenticated, user._id]",{"range":"187","text":"188"},[1031,1033],"[currentArtist]",[1096,1111],"[contentInView, setRowsVisible]",[1801,1815],"[artistViewed, currentArtist, user]",[1721,1723],[2114,2129],"[contentInView, setFormsVisible]",[438,440],"[isAuthenticated, user._id]"]