[{"C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\pages\\signInPage.js":"1","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\index.js":"2","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\pages\\registerPage.js":"3","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\pages\\profilePage.js":"4","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\services\\Profile.js":"5","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\pages\\profileEditPage.js":"6","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\components\\navbar\\Navbar.js":"7","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\pages\\searchPage.js":"8","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\components\\message.js":"9","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\pages\\homePage.js":"10","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\components\\search\\searchForm.js":"11","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\components\\navbar\\signInOption.js":"12","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\components\\navbar\\signOutOption.js":"13","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\App.js":"14","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\Context\\AuthenticationCtxt.js":"15","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\services\\Authentication.js":"16","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\services\\Cloudinary.js":"17"},{"size":2479,"mtime":1608639838736,"results":"18","hashOfConfig":"19"},{"size":333,"mtime":1608165519682,"results":"20","hashOfConfig":"19"},{"size":5163,"mtime":1608682826633,"results":"21","hashOfConfig":"19"},{"size":9728,"mtime":1608639967979,"results":"22","hashOfConfig":"19"},{"size":2278,"mtime":1608610920246,"results":"23","hashOfConfig":"19"},{"size":15867,"mtime":1608639720954,"results":"24","hashOfConfig":"19"},{"size":1768,"mtime":1608634281588,"results":"25","hashOfConfig":"19"},{"size":408,"mtime":1608577682607,"results":"26","hashOfConfig":"19"},{"size":336,"mtime":1608628125417,"results":"27","hashOfConfig":"19"},{"size":1504,"mtime":1608678461418,"results":"28","hashOfConfig":"19"},{"size":7080,"mtime":1608639664168,"results":"29","hashOfConfig":"19"},{"size":244,"mtime":1608632352352,"results":"30","hashOfConfig":"19"},{"size":703,"mtime":1608632366951,"results":"31","hashOfConfig":"19"},{"size":978,"mtime":1608633423061,"results":"32","hashOfConfig":"19"},{"size":895,"mtime":1608636789997,"results":"33","hashOfConfig":"19"},{"size":1509,"mtime":1608253577871,"results":"34","hashOfConfig":"19"},{"size":509,"mtime":1608594000291,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1wwpoez",{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"41"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"41"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"41"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"41"},"C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\pages\\signInPage.js",["79"],"C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\index.js",["80"],"import React, {useContext} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AuthProvider from './Context/AuthenticationCtxt'\n\nReactDOM.render(\n  <AuthProvider>\n    <App />\n  </AuthProvider>,    \n  document.getElementById('root')\n);\n\n",["81","82"],"C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\pages\\registerPage.js",[],"C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\pages\\profilePage.js",["83","84","85","86","87","88"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"../Context/AuthenticationCtxt\";\r\nimport { Container, Col, Row, Table, Image, Jumbotron, Nav } from \"react-bootstrap\";\r\nimport ProfileService from \"../services/Profile\";\r\n\r\n\r\n\r\nfunction ProfilePage(props) {\r\n\r\n    const [canEdit, setCanEdit] = useState(false);\r\n    const [artistViewed, setArtistViewed] = useState({})\r\n    const [rolesViewed, setRolesViewed] = useState([])\r\n    const [videoViewed, setVideoViewed] = useState([])\r\n    const [audioViewed, setAudioViewed] = useState([])\r\n    const [contentInView, setContentInView] = useState(\"Bio\")\r\n    const authContext = useContext(AuthContext)\r\n    const [user] = useState(authContext.user)\r\n    const [isAuthenticated, setIsAuthenticated] = useState(authContext.isAuthenticated)\r\n\r\n    let currentArtist = window.location.href.split(\"=\")[1];\r\n\r\n    useEffect(() => {\r\n        ProfileService.getUser(currentArtist).then(res => {\r\n            setArtistViewed(res)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        setRowsVisible()\r\n    }, [contentInView])\r\n\r\n    useEffect(() => {\r\n        if (user && user !== null) {\r\n            if (user._id === currentArtist) {\r\n                setCanEdit(true)\r\n            } else {\r\n                setCanEdit(false)\r\n            }\r\n        }\r\n\r\n        ProfileService.getRoles(currentArtist).then(res => {\r\n            setRolesViewed(res.roles)\r\n        }).then(() => {\r\n            ProfileService.getAudio(currentArtist).then(res => {\r\n                setAudioViewed(res.audio_recordings)\r\n            }).then(() => {\r\n                ProfileService.getVideo(currentArtist).then(res => {\r\n                    setVideoViewed(res.video_recordings)\r\n                })\r\n            })\r\n        })\r\n    }, [artistViewed])\r\n\r\n    const handleNavClick = (e) => {\r\n\r\n        const { id } = e.target\r\n\r\n        setContentInView(id)\r\n    }\r\n\r\n    const setRowsVisible = () => {\r\n\r\n        const rows = document.getElementsByClassName(\"trow\")\r\n\r\n        for (var i = 0; i < rows.length; i++) {\r\n\r\n            if (rows[i].classList[0] === contentInView) {\r\n                rows[i].style.display = \"block\"\r\n            } else {\r\n                rows[i].style.display = \"none\"\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Container className=\"justify-content-center\" style={{ border: \"solid 3px black\", marginTop: \"2vh\", marginBottom: \"2vh\", paddingTop: \"5vh\", paddingBottom: \"5vh\", borderRadius: \"20px\", boxShadow: \"10px 10px 30px gray\" }}>\r\n            <Row style={{ maxWidth: \"100vw\" }}>\r\n                <Col>\r\n                </Col>\r\n                <Col>\r\n                    <div className=\"justify-content-center text-center\" style={{ margin: \"2px\", fontFamily: \"'Times New Roman'\", fontSize: \"1.4vw\", fontWeight: \"900\", boxShadow: \"8px 8px 10px gray, inset 0em 1em 1em rgba(0,0,0,0.125)\", borderRadius: \"5px\", width: \"fit-content\", padding: \"1vh\" }}>\r\n                        <p style={{ marginBottom: \"0\" }}>{artistViewed.first_name} {artistViewed.last_name}, {artistViewed.voice_type}</p>\r\n                        <p style={{ marginBottom: \"0\" }}>{artistViewed.city}, {artistViewed.state}</p>\r\n                    </div>\r\n                </Col>\r\n                <Col>\r\n                </Col>\r\n            </Row>\r\n            <Jumbotron style={{ padding: \"0\", margin: \"0\", backgroundColor: \"white\", marginTop: \"3vh\" }}>\r\n                <Container fluid className=\"justify-content-center\" style={{ display: \"flex\" }}>\r\n\r\n                    <Col className=\"col-lg\">\r\n                        <Image className=\"float-left\" style={{ maxHeight: \"50vh\", maxWidth: \"50vw\", position: \"relative\", boxShadow: \"8px 8px 30px gray\" }} src={artistViewed.headshot ? artistViewed.headshot : \"https://sheetmusicplus.files.wordpress.com/2015/12/circle_of_fifths_deluxe_4-svg.png\"} />\r\n                    </Col>\r\n\r\n\r\n                    <Col className=\"col-lg\" >\r\n                        <Table borderless className=\"table-striped\" style={{ boxShadow: \"8px 8px 30px gray, inset 0em 0em 1em rgba(0,0,0,0.025)\", maxHeight: \"400px\", overflow: \"scroll\", borderRadius: \"40px\" }}>\r\n                            <Nav className=\"justify-content-center\" variant=\"tabs\" activeKey={contentInView} style={{ borderBottom: \"none\", width: \"100%\", borderColor: \"black\" }}>\r\n                                <Nav.Item>\r\n                                    <Nav.Link eventKey=\"Bio\" id=\"Bio\" style={{ fontWeight: \"bolder\", fontFamily: \"'Times New Roman'\" }} onClick={handleNavClick}>Bio</Nav.Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item>\r\n                                    <Nav.Link eventKey=\"Roles\" id=\"Roles\" style={{ fontWeight: \"bolder\", fontFamily: \"'Times New Roman'\" }} onClick={handleNavClick}>Roles</Nav.Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item>\r\n                                    <Nav.Link eventKey=\"Audio\" id=\"Audio\" style={{ fontWeight: \"bolder\", fontFamily: \"'Times New Roman'\" }} onClick={handleNavClick}>Audio</Nav.Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item>\r\n                                    <Nav.Link eventKey=\"Video\" id=\"Video\" style={{ fontWeight: \"bolder\", fontFamily: \"'Times New Roman'\" }} onClick={handleNavClick}>Video</Nav.Link>\r\n                                </Nav.Item>\r\n                            </Nav>\r\n\r\n                            {artistViewed.bio || artistViewed.bio !== null ?\r\n                                <tr className=\"Bio trow\" style={{ display: \"none\", fontFamily: \"'Times New Roman'\" }}>\r\n                                    <td>{artistViewed.bio}</td>\r\n                                </tr>\r\n                                :\r\n                                <Container style={{ marginLeft: \"8vw\", marginRight: \"6vw\" }}>\r\n                                    <tr className=\"Bio trow text-center\" style={{ fontFamily: \"'Times New Roman'\" }}>\r\n                                        <td>Bio coming soon!</td>\r\n                                    </tr>\r\n                                </Container>\r\n                            }\r\n\r\n                            {rolesViewed.length > 0 ?\r\n                                <Container style={{ marginLeft: \"6vw\", marginRight: \"6vw\" }}>\r\n                                    {rolesViewed.map(Role =>\r\n                                        <tr className=\"Roles trow\" style={{ display: \"none\", fontFamily: \"'Times New Roman'\" }}>\r\n                                            <td>{Role.character_name}</td>\r\n                                            <td>{Role.opera_show_name}</td>\r\n                                            <td>{Role.composer}</td>\r\n                                        </tr>\r\n                                    )}\r\n\r\n                                </Container>\r\n                                :\r\n                                <Container style={{ marginLeft: \"8vw\", marginRight: \"6vw\" }}>\r\n                                    < tr className=\"Roles trow\" style={{ display: \"none\", fontFamily: \"'Times New Roman'\" }}>\r\n                                        <td>Roles coming soon!</td>\r\n                                    </tr>\r\n                                </Container>\r\n                            }\r\n\r\n                            {videoViewed.length > 0 ?\r\n\r\n                                videoViewed.map(Video =>\r\n                                    <tr className=\"Video trow\" style={{ display: \"none\", fontFamily: \"'Times New Roman'\", fontWeight: \"bold\", marginRight: \"6vw\", marginLeft: \"6vw\", maxWidth: \"300px\", maxHeight: \"300px\" }}>\r\n                                        <iframe title={Video.song_name} src={Video.video_link} frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen=\"true\"></iframe>\r\n                                        <td>{Video.song_name} ({Video.song_composer})</td>\r\n                                    </tr>\r\n                                )\r\n\r\n                                :\r\n                                <Container style={{ marginLeft: \"9vw\", marginRight: \"6vw\" }}>\r\n                                    <tr className=\"Video trow\" style={{ display: \"none\", fontFamily: \"'Times New Roman'\" }}>\r\n                                        <td>Videos coming soon!</td>\r\n                                    </tr>\r\n                                </Container>\r\n                            }\r\n\r\n                            {audioViewed.length > 0 ?\r\n\r\n                                audioViewed.map(Recording =>\r\n                                    <tr className=\"Audio trow\" style={{ display: \"none\", fontFamily: \"'Times New Roman'\", marginLeft: \"20%\", marginRight: \"20%\" }}>\r\n                                        <audio controls controlsList=\"nodownload\" src={Recording.audio_link}>Your browser doesn't support this audio player</audio>\r\n                                        <td>{Recording.song_name} ({Recording.song_composer})</td>\r\n                                    </tr>)\r\n                                :\r\n                                <Container style={{ marginLeft: \"6vw\", marginRight: \"6vw\" }}>\r\n                                    <tr className=\"Audio trow\" style={{ display: \"none\", fontFamily: \"'Times New Roman'\" }}>\r\n                                        <td>Audio recordings coming soon!</td>\r\n                                    </tr>\r\n                                </Container>\r\n                            }\r\n\r\n                        </Table>\r\n                    </Col>\r\n                </Container>\r\n            </Jumbotron>\r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default ProfilePage","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\services\\Profile.js",["89"],"export default {\r\n    getUser: (id) => {\r\n        return fetch('/user/profile=' + id).then(res => {\r\n                return res.json().then(data => data)\r\n            })\r\n    },\r\n    \r\n    updateUser: (body) => {\r\n        return fetch('/user/profile', {\r\n            method: \"PUT\",\r\n            body: JSON.stringify(body),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(res => res.json())\r\n            .then(data => data)\r\n    },\r\n\r\n    getRoles: (id) => {\r\n        return fetch('/user/roles/profile=' + id).then(res => {\r\n                return res.json().then(data => data)\r\n            })\r\n    },\r\n\r\n    addRole: (body) =>{\r\n        return fetch('/user/roles', {\r\n            method: \"POST\",\r\n            body: JSON.stringify(body),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(res => res.json())\r\n            .then(data => data)\r\n    },\r\n\r\n\r\n    getAudio: (id) => {\r\n        return fetch('/user/audios/profile=' + id).then(res => {\r\n                return res.json().then(data => data)\r\n            })\r\n    },\r\n\r\n    addAudio: (body) =>{\r\n        return fetch('/user/audios', {\r\n            method: \"POST\",\r\n            body: JSON.stringify(body),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(res => res.json())\r\n            .then(data => data)\r\n    },\r\n\r\n    getVideo: (id) => {\r\n        return fetch('/user/videos/profile=' + id).then(res => {\r\n                return res.json().then(data => data)\r\n            })\r\n    },\r\n\r\n    addVideo: (body) =>{\r\n        return fetch('/user/videos', {\r\n            method: \"POST\",\r\n            body: JSON.stringify(body),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(res => res.json())\r\n            .then(data => data)\r\n    },\r\n\r\n    simpleSearch: (search) => {\r\n        return fetch('/user/simplesearch=' + search).then(res => {\r\n\r\n            return res.json().then(data => data)\r\n        })\r\n    },\r\n    \r\n    advancedSearch: (search) => {\r\n        return fetch('/user/advancedsearch=' + search).then(res => {\r\n            return res.json().then(data => data)\r\n        })\r\n    }\r\n}","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\pages\\profileEditPage.js",["90","91","92","93","94"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"../Context/AuthenticationCtxt\";\r\nimport { Container, Nav, Form, Button } from \"react-bootstrap\";\r\nimport ProfileService from \"../services/Profile\";\r\nimport Message from '../components/message';\r\nimport CloudinaryService from \"../services/Cloudinary\"\r\n\r\n\r\nfunction Edit(props) {\r\n\r\n    const authContext = useContext(AuthContext)\r\n    const [user] = useState(authContext.user);\r\n    const [contentInView, setContentInView] = useState(\"Info\")\r\n    const [artistViewed, setArtistViewed] = useState({})\r\n    const [rolesViewed, setRolesViewed] = useState([])\r\n    const [videoViewed, setVideoViewed] = useState([])\r\n    const [audioViewed, setAudioViewed] = useState([])\r\n    const [roleToAdd, setRoleToAdd] = useState({})\r\n    const [videoToAdd, setVideoToAdd] = useState({})\r\n    const [audioToAdd, setAudioToAdd] = useState({})\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const [cloudinaryData, setCloudinaryData] = useState(\"\")\r\n\r\n\r\n    let currentArtist = window.location.href.split(\"=\")[1];\r\n\r\n    useEffect(() => {\r\n        ProfileService.getUser(currentArtist).then(res => {\r\n            setArtistViewed(res)\r\n        }).then(() => {\r\n            ProfileService.getRoles(currentArtist).then(res => {\r\n                setRolesViewed(res)\r\n            }).then(() => {\r\n                ProfileService.getAudio(currentArtist).then(res => {\r\n                    setAudioViewed(res)\r\n                }).then(() => {\r\n                    ProfileService.getVideo(currentArtist).then(res => {\r\n                        setVideoViewed(res)\r\n                    })\r\n                })\r\n            })\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (audioToAdd.audio_link) {\r\n            ProfileService.addAudio(audioToAdd).then((res) => {\r\n                setMessage({messageBody: \"Upload Successful!\", messageError: false})\r\n            }).then(() => {\r\n                setAudioToAdd({})\r\n            })\r\n        }\r\n    }, [audioToAdd])\r\n\r\n    useEffect(() => {\r\n\r\n        setFormsVisible()\r\n    }, [contentInView])\r\n\r\n    const handleNavClick = (e) => {\r\n        e.preventDefault()\r\n\r\n        const { id } = e.target\r\n\r\n        setContentInView(id)\r\n        setMessage(null)\r\n    }\r\n\r\n    const setFormsVisible = () => {\r\n\r\n        const forms = document.getElementsByTagName(\"FORM\")\r\n\r\n        for (var i = 0; i < forms.length; i++) {\r\n\r\n            if (forms[i].id === contentInView) {\r\n                forms[i].style.display = null\r\n            } else {\r\n                forms[i].style.display = \"none\"\r\n            }\r\n        }\r\n    }\r\n\r\n    const onArtistChange = (e) => {\r\n\r\n        const { name, value } = e.target\r\n        setArtistViewed({ ...user, [name]: value })\r\n        setMessage(null)\r\n    }\r\n\r\n    const onArtistSubmit = (e) => {\r\n\r\n        e.preventDefault()\r\n\r\n        ProfileService.updateUser(artistViewed).then(res => {\r\n            if (res.message.messageError === false) {\r\n                setMessage({ messageBody: \"Upload successful!\", messageError: false })\r\n            } else {\r\n                setMessage({messageBody: res.message.messageBody, messageError: true})\r\n            }\r\n        })\r\n    }\r\n\r\n    const onRoleChange = (e) => {\r\n\r\n        const { name, value } = e.target\r\n        setRoleToAdd({ ...roleToAdd, [name]: value })\r\n        setMessage(null)\r\n    }\r\n\r\n    const onRoleSubmit = (e) => {\r\n\r\n        e.preventDefault()\r\n\r\n        ProfileService.addRole(roleToAdd).then(res => {\r\n            if (res.message.messageError === false) {\r\n                setMessage({ messageBody: \"Upload successful!\", messageError: false })\r\n            } else {\r\n                setMessage({messageBody: \"Something went wrong. Please try again later\", messageError: true})\r\n            }\r\n        })\r\n    }\r\n\r\n    const onMediaChange = (e) => {\r\n\r\n\r\n\r\n        const { files } = e.target\r\n\r\n        const data = new FormData()\r\n\r\n        data.append('file', files[0])\r\n        data.append('upload_preset', \"tdufqkda\")\r\n\r\n        setCloudinaryData(data)\r\n    }\r\n\r\n    const onPictureSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        CloudinaryService.uploadPicture(cloudinaryData).then(res => {\r\n            ProfileService.updateUser({ \"headshot\": res.secure_url }).then(talkBack => {\r\n                if (talkBack.message.messageError === false) {\r\n                    setMessage({ messageBody: \"Upload successful!\", messageError: false })\r\n                } else {\r\n                    setMessage({messageBody: talkBack.message.messageBody, messageError: true})\r\n                }\r\n            }).then(() => {\r\n                setCloudinaryData(\"\")\r\n            })\r\n        })\r\n    }\r\n\r\n    const onAudioInfoChange = (e) => {\r\n\r\n        const { name, value } = e.target\r\n        setAudioToAdd({ ...audioToAdd, [name]: value })\r\n        setMessage(null)\r\n    }\r\n\r\n    const onAudioSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        CloudinaryService.uploadVideo(cloudinaryData).then(res => {\r\n            setAudioToAdd({ ...audioToAdd, audio_link: res.secure_url })\r\n        })\r\n    }\r\n\r\n    const onVideoChange = (e) => {\r\n        const { name, value } = e.target\r\n        setVideoToAdd({ ...videoToAdd, [name]: value })\r\n        setMessage(null)\r\n    }\r\n\r\n    const onVideoSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        ProfileService.addVideo(videoToAdd).then(res => {\r\n            if (res.message.messageError === false) {\r\n                setMessage({ messageBody: \"Upload successful!\", messageError: false })\r\n            } else {\r\n                setMessage({messageBody: res.message.messageBody, messageError: true})\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <Container>\r\n            {user._id === currentArtist ?\r\n                <Container style={{ width: \"50vw\", borderColor: \"black\" }}>\r\n\r\n                    <Nav className=\"justify-content-center\" variant=\"tabs\" activeKey={contentInView} >\r\n                        <Nav.Item>\r\n                            <Nav.Link eventKey=\"Info\" id=\"Info\" style={{ fontWeight: \"bolder\", fontFamily: \"'Times New Roman'\" }} onClick={handleNavClick}>Info</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link eventKey=\"Bio\" id=\"Bio\" style={{ fontWeight: \"bolder\", fontFamily: \"'Times New Roman'\" }} onClick={handleNavClick}>Bio</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link eventKey=\"Roles\" id=\"Roles\" style={{ fontWeight: \"bolder\", fontFamily: \"'Times New Roman'\" }} onClick={handleNavClick}>Roles</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link eventKey=\"Audio\" id=\"Audio\" style={{ fontWeight: \"bolder\", fontFamily: \"'Times New Roman'\" }} onClick={handleNavClick}>Audio</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link eventKey=\"Video\" id=\"Video\" style={{ fontWeight: \"bolder\", fontFamily: \"'Times New Roman'\" }} onClick={handleNavClick}>Video</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <Nav.Link eventKey=\"Headshot\" id=\"Headshot\" style={{ fontWeight: \"bolder\", fontFamily: \"'Times New Roman'\" }} onClick={handleNavClick}>Headshot</Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                    <Form id=\"Info\" style={{ display: \"none\", marginTop:\"2vh\", boxShadow:\"2px 2px 20px\", padding:\"2vh\" }} onSubmit={onArtistSubmit}>\r\n                        <Form.Label htmlFor=\"first_name\" style={{ fontFamily: \"'Times New Roman'\" }}>First Name: </Form.Label>\r\n                        <input className=\"form-control\" type=\"text\" name=\"first_name\" defaultValue={artistViewed.first_name} style={{ fontFamily: \"'Times New Roman'\" }} placeholder=\"Jane\" onChange={onArtistChange} />\r\n                        <Form.Label htmlFor=\"last_name\" style={{ fontFamily: \"'Times New Roman'\" }}>Last Name: </Form.Label>\r\n                        <input className=\"form-control\" type=\"text\" name=\"last_name\" defaultValue={artistViewed.last_name} style={{ fontFamily: \"'Times New Roman'\" }} placeholder=\"Doe\" onChange={onArtistChange} />\r\n                        <Form.Label htmlFor=\"city\" style={{ fontFamily: \"'Times New Roman'\" }}>City: </Form.Label>\r\n                        <input className=\"form-control\" type=\"text\" name=\"city\" defaultValue={artistViewed.city} style={{ fontFamily: \"'Times New Roman'\" }} placeholder=\"Austin\" onChange={onArtistChange} />\r\n                        <Form.Label htmlFor=\"state\" style={{ fontFamily: \"'Times New Roman'\" }}>State: </Form.Label>\r\n                        <input className=\"form-control\" type=\"text\" name=\"state\" style={{ fontFamily: \"'Times New Roman'\" }} defaultValue={artistViewed.state} placeholder=\"Texas\" onChange={onArtistChange} />\r\n                        <Form.Label htmlFor=\"school\" style={{ fontFamily: \"'Times New Roman'\" }}>School: </Form.Label>\r\n                        <input className=\"form-control\" defaultValue={artistViewed.school} style={{ fontFamily: \"'Times New Roman'\" }} type=\"text\" name=\"school\" placeholder=\"University of Houston\" onChange={onArtistChange} />\r\n                        <Form.Label htmlFor=\"email\" style={{ fontFamily: \"'Times New Roman'\" }}>Email Address: </Form.Label>\r\n                        <input className=\"form-control\" defaultValue={artistViewed.email} style={{ fontFamily: \"'Times New Roman'\" }} type=\"text\" name=\"email\" placeholder=\"janedoe@isfake.net\" onChange={onArtistChange} />\r\n                        <Button style={{ marginTop: \"5px\", fontFamily: \"'Times New Roman'\" }} variant=\"outline-dark\" type=\"submit\">Submit</Button>\r\n                        {message ? <Message message={message} /> : null}\r\n                    </Form>\r\n\r\n                    <Form id=\"Bio\" style={{ display: \"none\", marginTop:\"2vh\", boxShadow:\"2px 2px 20px\", padding:\"2vh\" }} onSubmit={onArtistSubmit}>\r\n                        <Form.Label style={{ fontFamily: \"'Times New Roman'\" }}>Add/Edit Bio: </Form.Label>\r\n                        <textarea className=\"form-control\" name=\"bio\" style={{ fontFamily: \"'Times New Roman'\" }} defaultValue={artistViewed.bio} placeholder=\"Enter Bio Here\" onChange={onArtistChange} />\r\n                        <Button style={{ marginTop: \"5px\", fontFamily: \"'Times New Roman'\" }} variant=\"outline-dark\" type=\"submit\">Submit</Button>\r\n                        {message ? <Message message={message} /> : null}\r\n                    </Form>\r\n\r\n                    <Form id=\"Roles\" style={{ display: \"none\", marginTop:\"2vh\", boxShadow:\"2px 2px 20px\", padding:\"2vh\" }} onSubmit={onRoleSubmit}>\r\n                        <Form.Label style={{ fontFamily: \"'Times New Roman'\" }}>Character: </Form.Label>\r\n                        <input className=\"form-control\" name=\"character_name\" style={{ fontFamily: \"'Times New Roman'\" }} placeholder=\"Sarastro\" onChange={onRoleChange} required />\r\n                        <Form.Label style={{ fontFamily: \"'Times New Roman'\" }}>Opera/Show: </Form.Label>\r\n                        <input className=\"form-control\" name=\"opera_show_name\" style={{ fontFamily: \"'Times New Roman'\" }} placeholder=\"The Magic Flute\" onChange={onRoleChange} required />\r\n                        <Form.Label style={{ fontFamily: \"'Times New Roman'\" }}>Composer: </Form.Label>\r\n                        <input className=\"form-control\" name=\"composer\" style={{ fontFamily: \"'Times New Roman'\" }} placeholder=\"Mozart\" onChange={onRoleChange} required />\r\n                        <Button style={{ marginTop: \"5px\", fontFamily: \"'Times New Roman'\" }} variant=\"outline-dark\" type=\"submit\">Submit</Button>\r\n                        {message ? <Message message={message} /> : null}\r\n                    </Form>\r\n\r\n                    <Form id=\"Audio\" style={{ display: \"none\", marginTop:\"2vh\", boxShadow:\"2px 2px 20px\", padding:\"2vh\" }} onSubmit={onAudioSubmit}>\r\n                        <Form.Label style={{ fontFamily: \"'Times New Roman'\" }}>Song Name: </Form.Label>\r\n                        <input className=\"form-control\" name=\"song_name\" style={{ fontFamily: \"'Times New Roman'\" }} placeholder=\"O Isis und Osiris\" onChange={onAudioInfoChange} required />\r\n                        <Form.Label style={{ fontFamily: \"'Times New Roman'\" }}>Composer: </Form.Label>\r\n                        <input className=\"form-control\" name=\"song_composer\" style={{ fontFamily: \"'Times New Roman'\" }} placeholder=\"Mozart\" onChange={onAudioInfoChange} required />\r\n                        <Form.Label style={{ fontFamily: \"'Times New Roman'\" }}>Language: </Form.Label>\r\n                        <input className=\"form-control\" name=\"language\" style={{ fontFamily: \"'Times New Roman'\" }} placeholder=\"German\" onChange={onAudioInfoChange} required />\r\n                        <Form.Label style={{ fontFamily: \"'Times New Roman'\" }}>Audio File: </Form.Label>\r\n                        <Form.File style={{ fontFamily: \"'Times New Roman'\" }} name=\"audio_link\" onChange={onMediaChange} required />\r\n                        <Button style={{ marginTop: \"5px\", fontFamily: \"'Times New Roman'\" }} variant=\"outline-dark\" type=\"submit\">Submit</Button>\r\n                        {message ? <Message message={message} /> : null}\r\n                    </Form>\r\n\r\n                    <Form id=\"Video\" style={{ display: \"none\", marginTop:\"2vh\", boxShadow:\"2px 2px 20px\", padding:\"2vh\" }} onSubmit={onVideoSubmit}>\r\n                        <Form.Label style={{ fontFamily: \"'Times New Roman'\" }}>Song Name: </Form.Label>\r\n                        <input className=\"form-control\" name=\"song_name\" style={{ fontFamily: \"'Times New Roman'\" }} placeholder=\"O Isis und Osiris\" onChange={onVideoChange} required />\r\n                        <Form.Label style={{ fontFamily: \"'Times New Roman'\" }}>Composer: </Form.Label>\r\n                        <input className=\"form-control\" name=\"song_composer\" style={{ fontFamily: \"'Times New Roman'\" }} placeholder=\"Mozart\" onChange={onVideoChange} required />\r\n                        <Form.Label style={{ fontFamily: \"'Times New Roman'\" }}>Language: </Form.Label>\r\n                        <input className=\"form-control\" name=\"language\" style={{ fontFamily: \"'Times New Roman'\" }} placeholder=\"German\" onChange={onVideoChange} required />\r\n                        <Form.Label style={{ fontFamily: \"'Times New Roman'\" }}>Youtube Embed Link: </Form.Label>\r\n                        <input className=\"form-control\" name=\"video_link\" style={{ fontFamily: \"'Times New Roman'\" }} placeholder=\"https://www.youtube.com/embed/Xox5wU7RXsA\" onChange={onVideoChange} required />\r\n                        <Button style={{ marginTop: \"5px\", fontFamily: \"'Times New Roman'\" }} variant=\"outline-dark\" type=\"submit\">Submit</Button>\r\n                        {message ? <Message message={message} /> : null}\r\n                    </Form>\r\n\r\n                    <Form id=\"Headshot\" style={{ display: \"none\", marginTop:\"2vh\", boxShadow:\"2px 2px 20px\", padding:\"2vh\" }} onSubmit={onPictureSubmit}>\r\n                        <Form.Label style={{ fontFamily: \"'Times New Roman'\" }}>Headshot: </Form.Label>\r\n                        <Form.File style={{ fontFamily: \"'Times New Roman'\" }} name=\"headshot\" onChange={onMediaChange} required />\r\n                        <Button style={{ marginTop: \"5px\", fontFamily: \"'Times New Roman'\" }} variant=\"outline-dark\" type=\"submit\">Submit</Button>\r\n                        {message ? <Message message={message} /> : null}\r\n                    </Form>\r\n\r\n\r\n                </Container>\r\n                :\r\n                <h1>You are not authroized to edit this profile!</h1>\r\n            }\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default Edit","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\components\\navbar\\Navbar.js",["95"],"import React, { useContext, useEffect } from \"react\"\r\nimport { Link } from 'react-router-dom'\r\nimport { AuthContext } from '../../Context/AuthenticationCtxt'\r\nimport { Nav, Navbar } from \"react-bootstrap\"\r\nimport SignIn from './signInOption'\r\nimport SignOut from './signOutOption'\r\nimport './navbar.css'\r\n\r\nfunction NavBar(props) {\r\n\r\n    const { user, isAuthenticated } = useContext(AuthContext)\r\n    \r\n    return (\r\n        <Navbar bg=\"dark\" expand=\"lg\" style={{ width: \"100%\" }}>\r\n            <Link to={isAuthenticated ? \"/profile=\" + user._id : \"/\"}>\r\n                <Navbar.Brand style={{ fontSize: \"xx-large\", color: \"whitesmoke\", fontFamily: \"'Times New Roman'\" }}>singID</Navbar.Brand>\r\n            </Link>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"justify-content-end navbar-dark\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"justify-content-end\" style={{ width: \"100%\", fontFamily:\"'Times New Roman'\" }}>\r\n                    {isAuthenticated ? \r\n                    <Nav.Link className=\"navBtn\" style={{color:\"whitesmoke\", fontFamily:\"'Times New Roman'\" }} href={\"/profileedit=\" + user._id}>Edit Profile</Nav.Link>\r\n                    :\r\n                    null}\r\n                    <Nav.Link className=\"navBtn\" style={{ color: \"whitesmoke\", fontFamily:\"'Times New Roman'\" }} href={isAuthenticated ? \"/profile=\" + user._id : \"/\"}>Home</Nav.Link>\r\n                    <Nav.Link className=\"navBtn\" style={{ color: \"whitesmoke\", fontFamily: \"'Times New Roman\" }} href=\"/search\">Search Artists</Nav.Link>\r\n                    { isAuthenticated ? <SignOut /> : <SignIn />}\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\pages\\searchPage.js",["96","97","98","99","100","101"],"C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\components\\message.js",[],"C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\pages\\homePage.js",["102","103","104","105"],"C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\components\\search\\searchForm.js",["106"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { Container, Form, Button, Nav, FormControl, FormLabel, Row, Col, Table,Alert } from \"react-bootstrap\";\r\nimport ProfileService from \"../../services/Profile\";\r\n\r\nfunction SearchForm(props) {\r\n    const [searchResults, setSearchResults] = useState([])\r\n    const [search, setSearch] = useState(\"\");\r\n    const [searchType, setSearchType] = useState({ type: \"simple\" });\r\n\r\n    const handleClick = (e) => {\r\n\r\n        const { id } = e.target;\r\n        setSearchType({ type: id });\r\n        if (searchType.type === \"simple\") {\r\n            setSearch(\"\");\r\n        } else {\r\n            setSearch({});\r\n        }\r\n    };\r\n\r\n    const onChangeSimple = (e) => {\r\n\r\n        const { value } = e.target;\r\n        setSearch(value);\r\n    };\r\n\r\n    const onChangeAdvanced = (e) => {\r\n\r\n        const { name, value } = e.target;\r\n        setSearch({ ...search, [name]: value });\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        if (searchType.type === \"simple\") {\r\n            ProfileService.simpleSearch(search).then(data => {\r\n                setSearchResults(data)\r\n            })\r\n        } else {\r\n            ProfileService.advancedSearch(JSON.stringify(search)).then(res => {\r\n\r\n                setSearchResults(res.response)\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Nav variant=\"tabs\" style={{ width:\"50vw\", marginBottom:\"2vh\" }} activeKey={searchType.type}>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"simple\" id=\"simple\" style={searchType.type === \"simple\" ? { color: \"black\", fontWeight: \"bolder\", fontFamily:\"'Times New Roman'\" } : { color: \"blue\", fontWeight: \"bolder\", fontFamily:\"'Times New Roman'\" }} onClick={handleClick}>Simple Search</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"advanced\" id=\"advanced\" style={searchType.type === \"advanced\" ? { color: \"black\", fontWeight: \"bolder\", fontFamily:\"'Times New Roman'\" } : { color: \"blue\", fontWeight: \"bolder\", fontFamily:\"'Times New Roman'\" }} onClick={handleClick}>Advanced Search</Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n            <Form style={{width:\"50vw\", boxShadow:\" 0px 2px 10px gray\", padding:\"3vh\", marginBottom:\"3vh\", borderRadius:\"8px\"}} onSubmit={onSubmit}>\r\n                {searchType.type === \"simple\" ?\r\n                    <div>\r\n                        <FormControl style={{ marginTop: \"5px\", fontFamily:\"'Times New Roman'\" }} type=\"text\" placeholder=\"Search for a first or last name, voice type, city, or state\" onChange={onChangeSimple} />\r\n                    </div> :\r\n                    <div>\r\n                        <Row>\r\n                            <Col>\r\n                                <FormLabel style={{fontFamily:\"'Times New Roman'\"}}>First Name: </FormLabel>\r\n                                <input className=\"form-control\" style={{fontFamily:\"'Times New Roman'\"}} name=\"first_name\" type=\"text\" onChange={onChangeAdvanced} />\r\n                            </Col>\r\n                            <Col>\r\n                                <FormLabel style={{fontFamily:\"'Times New Roman'\"}}>Last Name: </FormLabel>\r\n                                <input className=\"form-control\" style={{fontFamily:\"'Times New Roman'\"}} name=\"last_name\" type=\"text\" onChange={onChangeAdvanced} />\r\n                            </Col>\r\n                        </Row>\r\n                        <FormLabel style={{fontFamily:\"'Times New Roman'\"}}>Voice Type: </FormLabel>\r\n                        <Form.Control name=\"voice_type\" as=\"select\" style={{fontFamily:\"'Times New Roman'\"}} onChange={onChangeAdvanced}>\r\n                            <option></option>\r\n                            <option style={{fontFamily:\"'Times New Roman'\"}}>Soprano</option>\r\n                            <option style={{fontFamily:\"'Times New Roman'\"}}>Mezzo-Soprano</option>\r\n                            <option style={{fontFamily:\"'Times New Roman'\"}}>Contralto</option>\r\n                            <option style={{fontFamily:\"'Times New Roman'\"}}>Countertenor</option>\r\n                            <option style={{fontFamily:\"'Times New Roman'\"}}>Tenor</option>\r\n                            <option style={{fontFamily:\"'Times New Roman'\"}}>Baritone</option>\r\n                            <option style={{fontFamily:\"'Times New Roman'\"}}>Bass-Baritone</option>\r\n                            <option style={{fontFamily:\"'Times New Roman'\"}}>Bass</option>\r\n                        </Form.Control>\r\n                        <Row>\r\n                            <Col>\r\n                                <FormLabel style={{fontFamily:\"'Times New Roman'\"}}>City: </FormLabel>\r\n                                <input className=\"form-control\" name=\"city\" type=\"text\" style={{fontFamily:\"'Times New Roman'\"}} onChange={onChangeAdvanced} />\r\n                            </Col>\r\n                            <Col>\r\n                                <FormLabel style={{fontFamily:\"'Times New Roman'\"}}>State: </FormLabel>\r\n                                <input className=\"form-control\" name=\"state\" type=\"text\" style={{fontFamily:\"'Times New Roman'\"}} onChange={onChangeAdvanced} />\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                }\r\n                <Button type=\"submit\" variant=\"outline-dark\" style={{ marginTop: \"5px\", fontFamily:\"'Times New Roman'\"}}>Search</Button>\r\n            </Form>\r\n\r\n            <Table striped hover style={{ width:\"50vw\", boxShadow:\"2px 2px 12px gray\" }}>\r\n                <tbody style={{width: \"100%\"}}>\r\n                    {!searchResults ?\r\n                        <Alert className=\"alert-warning\" style={{fontFamily:\"'Times New Roman'\", fontWeight:\"bold\", marginBottom:\"0\"}}>No Results Found</Alert>\r\n                        :\r\n                        searchResults.map(artist =>\r\n                            <Link style={{ color: \"black\" }} to={\"/profile=\" + artist._id}>\r\n\r\n                                <tr style={{width: \"50vw\", paddingBottom: \"4px\", marginTop: \"3px\", marginBottom: '3px', display: \"table\", borderRadius:\"7px\"}} className=\"text-center\" key={artist._id} id={artist.id}>\r\n\r\n                                    <td><img src={artist.headshot ? artist.headshot : \"https://sheetmusicplus.files.wordpress.com/2015/12/circle_of_fifths_deluxe_4-svg.png\"} style={{width:\"40px\", height:\"50px\"}} thumbnail /></td>\r\n\r\n                                    <td style={{verticalAlign:\"middle\", fontFamily:\"'Times New Roman'\"}}>{artist.first_name} {artist.last_name}, {artist.voice_type}</td>\r\n\r\n                                    <td style={{verticalAlign:\"middle\", fontFamily:\"'Times New Roman'\"}}>{artist.city}, {artist.state}</td>\r\n\r\n                                </tr>\r\n\r\n                            </Link>\r\n                        )\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\nexport default SearchForm","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\components\\navbar\\signInOption.js",[],"C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\components\\navbar\\signOutOption.js",[],"C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\App.js",["107"],"C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\Context\\AuthenticationCtxt.js",["108"],"C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\services\\Authentication.js",["109"],"export default {\r\n    login: (user) => {\r\n        return fetch('/user/signin', {\r\n            method: \"POST\",\r\n            body: JSON.stringify(user),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(res => {\r\n            if (res.status !== 401) {\r\n                return res.json().then(data => data)\r\n            } else {\r\n                return { isAuthenticated: false, message: {messageBody: \"Meeeeeeeeeeeeeeow\", messageError: true},  user: { email: \"\", first_name: \"\", last_name: \"\" } }\r\n            }\r\n        })\r\n    },\r\n    register: (user) => {\r\n        return fetch('/user/register', {\r\n            method: \"POST\",\r\n            body: JSON.stringify(user),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(res => res.json())\r\n            .then(data => data);\r\n    },\r\n    logout: () => {\r\n        return fetch('user/logout')\r\n            .then(res => res.json())\r\n            .then(data => data);\r\n    },\r\n    isAuthenticated: () => {\r\n        return fetch('user/authenticated')\r\n            .then(res => {\r\n                if (res.status !== 401) {\r\n                    return res.json().then(data => data)\r\n                } else {\r\n                    return { isAuthenticated: false, message: { messageBody: \"You do not have permission to access this page\", messageError: true }, user: { email: \"\", first_name: \"\", last_name: \"\" } }\r\n                }\r\n            })\r\n    }\r\n}","C:\\Users\\crist\\OneDrive\\Documents\\artsing\\client\\src\\services\\Cloudinary.js",["110"],"export default {\r\n    uploadPicture: (data) => {\r\n        return fetch('https://api.cloudinary.com/v1_1/esthete/image/upload', {\r\n            method: \"POST\",\r\n            body: data\r\n        }).then(res => res.json())\r\n            .then(data => data);\r\n    }, \r\n    \r\n    uploadVideo: (data) => {\r\n        return fetch('https://api.cloudinary.com/v1_1/esthete/video/upload', {\r\n            method: \"POST\",\r\n            body: data\r\n        }).then(res => res.json())\r\n            .then(data => data);\r\n    }\r\n}",{"ruleId":"111","severity":1,"message":"112","line":29,"column":44,"nodeType":"113","messageId":"114","endLine":29,"endColumn":51},{"ruleId":"111","severity":1,"message":"115","line":1,"column":16,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"111","severity":1,"message":"120","line":10,"column":12,"nodeType":"113","messageId":"114","endLine":10,"endColumn":19},{"ruleId":"111","severity":1,"message":"121","line":18,"column":12,"nodeType":"113","messageId":"114","endLine":18,"endColumn":27},{"ruleId":"111","severity":1,"message":"122","line":18,"column":29,"nodeType":"113","messageId":"114","endLine":18,"endColumn":47},{"ruleId":"123","severity":1,"message":"124","line":26,"column":8,"nodeType":"125","endLine":26,"endColumn":10,"suggestions":"126"},{"ruleId":"123","severity":1,"message":"127","line":31,"column":8,"nodeType":"125","endLine":31,"endColumn":23,"suggestions":"128"},{"ruleId":"123","severity":1,"message":"129","line":53,"column":8,"nodeType":"125","endLine":53,"endColumn":22,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":1,"column":1,"nodeType":"133","endLine":83,"endColumn":2},{"ruleId":"111","severity":1,"message":"134","line":15,"column":12,"nodeType":"113","messageId":"114","endLine":15,"endColumn":23},{"ruleId":"111","severity":1,"message":"135","line":16,"column":12,"nodeType":"113","messageId":"114","endLine":16,"endColumn":23},{"ruleId":"111","severity":1,"message":"136","line":17,"column":12,"nodeType":"113","messageId":"114","endLine":17,"endColumn":23},{"ruleId":"123","severity":1,"message":"124","line":44,"column":8,"nodeType":"125","endLine":44,"endColumn":10,"suggestions":"137"},{"ruleId":"123","severity":1,"message":"138","line":59,"column":8,"nodeType":"125","endLine":59,"endColumn":23,"suggestions":"139"},{"ruleId":"111","severity":1,"message":"140","line":1,"column":29,"nodeType":"113","messageId":"114","endLine":1,"endColumn":38},{"ruleId":"111","severity":1,"message":"141","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"140","line":1,"column":27,"nodeType":"113","messageId":"114","endLine":1,"endColumn":36},{"ruleId":"111","severity":1,"message":"142","line":2,"column":21,"nodeType":"113","messageId":"114","endLine":2,"endColumn":24},{"ruleId":"111","severity":1,"message":"143","line":2,"column":26,"nodeType":"113","messageId":"114","endLine":2,"endColumn":30},{"ruleId":"111","severity":1,"message":"144","line":2,"column":32,"nodeType":"113","messageId":"114","endLine":2,"endColumn":43},{"ruleId":"111","severity":1,"message":"145","line":2,"column":45,"nodeType":"113","messageId":"114","endLine":2,"endColumn":51},{"ruleId":"111","severity":1,"message":"141","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"140","line":1,"column":27,"nodeType":"113","messageId":"114","endLine":1,"endColumn":36},{"ruleId":"111","severity":1,"message":"115","line":1,"column":38,"nodeType":"113","messageId":"114","endLine":1,"endColumn":48},{"ruleId":"111","severity":1,"message":"146","line":3,"column":10,"nodeType":"113","messageId":"114","endLine":3,"endColumn":21},{"ruleId":"147","severity":1,"message":"148","line":112,"column":41,"nodeType":"149","endLine":112,"endColumn":225},{"ruleId":"111","severity":1,"message":"140","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"131","severity":1,"message":"150","line":6,"column":1,"nodeType":"133","endLine":31,"endColumn":2},{"ruleId":"131","severity":1,"message":"132","line":1,"column":1,"nodeType":"133","endLine":42,"endColumn":2},{"ruleId":"131","severity":1,"message":"132","line":1,"column":1,"nodeType":"133","endLine":17,"endColumn":2},"no-unused-vars","'message' is assigned a value but never used.","Identifier","unusedVar","'useContext' is defined but never used.","no-native-reassign",["151"],"no-negated-in-lhs",["152"],"'canEdit' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","'setIsAuthenticated' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentArtist'. Either include it or remove the dependency array.","ArrayExpression",["153"],"React Hook useEffect has a missing dependency: 'setRowsVisible'. Either include it or remove the dependency array.",["154"],"React Hook useEffect has missing dependencies: 'currentArtist' and 'user'. Either include them or remove the dependency array.",["155"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'rolesViewed' is assigned a value but never used.","'videoViewed' is assigned a value but never used.","'audioViewed' is assigned a value but never used.",["156"],"React Hook useEffect has a missing dependency: 'setFormsVisible'. Either include it or remove the dependency array.",["157"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Nav' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","'AuthContext' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Assign arrow function to a variable before exporting as module default","no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"158","fix":"164"},{"desc":"165","fix":"166"},"Update the dependencies array to be: [currentArtist]",{"range":"167","text":"168"},"Update the dependencies array to be: [contentInView, setRowsVisible]",{"range":"169","text":"170"},"Update the dependencies array to be: [artistViewed, currentArtist, user]",{"range":"171","text":"172"},{"range":"173","text":"168"},"Update the dependencies array to be: [contentInView, setFormsVisible]",{"range":"174","text":"175"},[1031,1033],"[currentArtist]",[1096,1111],"[contentInView, setRowsVisible]",[1801,1815],"[artistViewed, currentArtist, user]",[1721,1723],[2114,2129],"[contentInView, setFormsVisible]"]